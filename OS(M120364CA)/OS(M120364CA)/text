In this program(os3.c)  no dealock occurs as both the threads p1 and p2 execute mutual exclusion through mutex m1 and m2 respectively ,and at a time only one of the threads enters the critical section named as var. Whenever a  thread  enters the critical section it locks its  mutex  so that the other thread cannot enter the same critical section at the same time and also unlocks it(mutex) after its task gets finished. 
						
Now consider the following situation:
 If suppose thread 1, i.e. p1 locks m1 and does not unlock it . At the same time p2 locks mutex m2 and does not unlock it. Now to enter the critical section p1 tries to lock m2 and p2 tries to lock m1 but since m1 is already locked by p1 and m2 is already locked by p2 both of them cannot lock the other  mutex. In such a condition neither of the processes can enter the critical section, such a condition among the two threads when neither of the processes can enter the critical section though it is not being used by any of the thread results in a 'DEADLOCK'.
